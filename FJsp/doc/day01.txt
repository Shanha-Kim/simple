### day01

	JSP(Java Server Page) 란???
		==> 웹 서버가 클라이언트에게 응답문서는 html 문서이다.
			이 문서를 만들어주는 언어의 일종
			
			Web Server가 가진 엔진이 실행할 수 있는 언어는 따로 정해져있다.
			이것을 Server Side Page (SSP)라고 부른다.
			
			예]
				대표적으로
					
					ASP(Active Server Page)
						==> Visual Basic 을 기반
					ASP.NET
						==> C# 을 기반
					PHP
						==> CGI 를 기반
					JSP
						==> JAVA 를 기반
						
		*
		결론]
			우리가 앞으로 배우는 내용은
			서버가 실행해서 클라이언트에게 응답하는 
			응답문서를 제작하기위한 언어를 배우는 것이다.
			
			즉, 서버가 실행할 수 있는 프로그램을 만드는 것.
			그 결과는 문서(파일로 탄생하게 되면)
			그 파일의 결과는 반드시 클라이언트의 웹 브라우저를 이용해서
			테스트를 해야 한다.
			
---------------------------------------------------------------------------------

실습환경 구성하기
	
	1. 웹어플리케이션 서버 설치
		==> 
			Web Server :
			HTTP 프로토콜에 의해서 클라이언트의 요청을 받아서 해결하는
			서버를 부르는 말이다.
			예]
				레진, IIS, 아파치
			
			
			WAS( Web Application Server) :
				웹 애플리케이션과 서버 환경을 만들어 동작시키는 기능을 제공하는 
				소프트웨어 프레임워크이다.
				
				톰캣은 엄밀히 이야기하면 WAS로 분류가 되지만
				내부에 아파치 엔진을 가지고 있다.
				따라서 웹서비스도 가능하다.
------------------------------------------------------------------------------------
				
		* 우리는 Apache Tomcat v.8.5.47 을 다운 받아서 설치한다.
			
			1. 압축파일을 다운받는다.
				https://tomcat.apache.org 로 접근해서 
				필요한 버젼의 파일을 다운받는다.
				
			2. 압축파일을 압축해제한다.
			
			3. 압축을 해제한 폴더를 적당한 폴더에 넣어둔다.
			
			4. 옮겨진 폴더의 경로를 복사하고
			
			5. 시스템 환경변수를 만들고, Path 변수에 경로 내부의 bin 폴더를 등록한다.
			
			6. 톰캣을 옮겨둔 폴더에서 conf 폴더를 찾아서 들어가서
				server.xml을 편집한다.
				<==
					63번째 줄 근방 편집
					
					     <Connector 
					     		connectionTimeout="20000" 
					     		port="80" 
					     		protocol="HTTP/1.1" 
					     		redirectPort="8443" 
					     		URIEncoding="UTF-8" />
					     		
			7. web.xml 파일을 편집한다.
				
				encoding 단어로 검색을 해서
				
				1)
					    <filter>
					        <filter-name>setCharacterEncodingFilter</filter-name>
					        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
					        <init-param>
					            <param-name>encoding</param-name>
					            <param-value>UTF-8</param-value>
					        </init-param>
					<!--         <async-supported>true</async-supported> -->
					    </filter>
					    
				2)
					        <filter-mapping>
						        <filter-name>setCharacterEncodingFilter</filter-name>
						        <url-pattern>/*</url-pattern>
						    </filter-mapping>
				
				
				3) 맨 아래쪽에 welcome-file-list 편집
					
					welcome page 로 지정하고 싶은 파일이름을 등록해준다.
					
					우리의 경우 main.jsp 파일을 웰컴파일로 지정을 했다.
					    
					    <welcome-file-list>
					        <welcome-file>index.html</welcome-file>
					        <welcome-file>index.htm</welcome-file>
					        <welcome-file>index.jsp</welcome-file>
					        <welcome-file>main.jsp</welcome-file>
					    </welcome-file-list>
------------------------------------------------------------------------------------
			
		# 프로그램 편집을 위한 편집기(Eclipse)를 설치
		
			1. 이클립스를 다운받는다.
				단, Java EE 에디션으로 압축파일을 다운 받는다.
				
			2. D: 드라이브에 Jsp 폴더를 만들고
				Jsp
				 |
				 |____app
				 |
				 |____doc
				 |
				 |____source
				 
				 의 구조로 폴더들을 만들어 놓는다.
				 
			3. Jsp/app 폴더에 이클립스를 압축을 풀어둔다.
			
			4. Jsp/app 폴더에
					ojdbc6.jar			-- Oracle 홈페이지에서 다운로드
					jsp-api.jar			-- tomcat/lib
					servlet-api.jar		-- tomcat/lib
				이 세개의 파일을 복사해서 넣어둔다.
				
			5. 이클립스를 실행하고
				WorkSpace 는 Jsp/source 폴더로 지정하고 실행한다.
				
			6. Dinamic Web Project 를 만든다.
				웹 모듈은 3.1 버젼을 선택한다.
				
			7. 프로젝트가 만들어 졌으면
				Jsp/app 폴더에 복사해둔 
				세개의 jar 파일을 External Jars 로 등록해준다.
				방법]
					프로젝트 선택하고
					오른쪽 버튼 클릭
					맨 아래 메뉴 Properties 메뉴 선택하고
					Build Path 를 왼쪽메뉴에서 선택하고
					중앙의 3번째 탭인 Library 를 선택하고
					왼쪽메뉴 External Jars 버튼 클릭하고
					세개의 파일 추가
					
			8. Properties 메뉴에서 
				Java Build Path --> Library 탭 --> 자바버젼을 1.8로 수정한다.
				Project Facets 메뉴를 선택하고
				자바버젼 을 수정해준다.
					
			9. 서버를 추가해준다.
				서버는 
					new --> other --> Server --> server -->
					Apache --> tomcat 8.5
				하고
				톰캣이 저장되어 있는 폴더를 지정해준다.
				프로젝트를 서버에 추가해준다.
				
				
	참고]
		Windows --> Preference --> General --> Workspace
		에서 encoding을 UTF-8로 설정해주고
		
		각 문서마다 인코딩을 UTF-8 로 설정해준다.
				
------------------------------------------------------------------------------------