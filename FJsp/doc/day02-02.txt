# day02-02

	내장 객체
		==> 자주 사용하는 클래스중 몇가지는 
			JSP 안에서 미리 new를 시켜서 사용할 수 있도록 준비를 해 놓은 것이 있다.
			그러므로 이것은 new 시킬 필요없이 
			필요한 순간에 사용할 수 있는 클래스를 
			내장 객체라 부른다.
			
		1. out 객체
			
			PrintWriter 클래스를 미리 new 시켜놓은 내장 객체
			
			즉
				PrintWriter out = new PrintWriter(???);
				
			이 클래스의 역할은 
			클라이언트에게 응답하는 문서를 작성하도록 하는 기능
			
			주요함수
				write()
				flush()
				
			PrintWriter는 JSPWriter 클래스로 변환되어서 new 된 경우이다.
			
			참고]
				따라서 내장객체는 결국 클래스를 사용하는 것이다.
				그 클래스 안에 원하는 함수가 무엇인지를 파악해두면 유용하겠다.
				
		*	
		2. request 객체
			==> 클라이언트의 요청 정보를 관리하는 역할을 하는 내장 객체
				즉, 요청한 클라이언트의 IP주소, 요청내용, 부가정보를 알고 싶은 경우
				사용하는 내장객체이다.
				
			HttpServletRequest 클래스를 이용해서 만들어진 내장객체
			
			주요함수]
				getParameter()
				==> 서버측에서 클라이언트가 요청한 부가정보를 알아내는 함수
					
					형식]
						String ??? = getParameter("키값");
				
				문제점]
					부가정보는 오직 문자열로만 받을 수 있다.
						
				getParameterValues()
					형식]
						String[] ??? = getParameterValues("키값");
						
참고]

	클라이언트가 서버에게 요청하는 방법
		1. GET
			1) 주소 표시줄에 직접 입력해서 요청하는 방법
			2) <a> 태그를 이용해서 요청하는 방법
				형식]
					<a href="?????">내용</a>
					
				JavaScript
					location.href = 이동할주소
					
			참고]
				GET 방식으로요청을 할 때 부가 저보를 같이 줄 수 있다.
				예를 들어 게시판 목록보기를 할 때
				몇페이지를 보여주세요... 라고 요청 할 수 있다.
				
			형식]
				<a href="요청문서?키값=데이터&키값=데이터&...">내용</a>
				
				주의]
					? = & 앞뒤에는 절대로 공백이 있어서는 안된다.
					
			참고]
				GET 방식은 요청 내용이 주소표시줄에 나타나기 때문에
				보안에 취약한 문제점이 있다.
				
			문제점]
				부가정보에 한글이 들어가면 서버측에서 받을 수 없는 경우가 생긴다.
				즉 한글이 깨져서 나오는 경우.....
				
				해결 방법]
					1. 그 문서에서만 해결하는 방법
						해당문서 안에서
						<%
							request.setCharacterEncoding("UTF-8");
						%>
					2. 모든 문서에서 해결하는 방법
						server.xml 파일안에
						
						<Connector> 태그의 마지막부분에
						URIEncoding="UTF-8" 이라는 속성을 추가해준다.
		2. POST
				